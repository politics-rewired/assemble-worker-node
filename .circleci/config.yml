version: 2

jobs:
  lint:
    resource_class: small
    docker:
      - image: circleci/node:12.18.1
    working_directory: ~/assemble-worker
    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - run:
          name: Lint commits
          command: yarn commitlint-circle

      - run:
          name: Lint codebase
          command: yarn lint

  test:
    # https://circleci.com/docs/2.0/configuration-reference/#resource_class
    resource_class: small

    docker:
      # Main container
      - image: circleci/node:12.18.1
        environment:
          BASE_URL: 'localhost:3000'
          TEST_AMQP_URI: amqp://guest:guest@localhost
          TEST_DATABASE_URL: postgres://postgres:postgres@localhost/assemble_worker_test
          TEST_MIGRATION_DATABASE_URL: postgres://postgres:postgres@localhost/assemble_worker_migration_test
      # Postgres
      - image: circleci/postgres:12.1-alpine
        environment:
          POSTGRES_DB: assemble_worker_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
      # RabbitMQ
      - image: rabbitmq:3.8.5-alpine
      # Bridge
      - image: gcr.io/assemble-services/pg-amqp-bridge-node:1.0.1
        command:
          - /bin/sh
          - -c
          - |
            echo "waiting for postgres"
            while ! nc -z localhost 5432; do
              echo "sleeping 1s" && sleep 1
            done
            echo "waiting for rabbitmq"
            while ! nc -z localhost 5672; do
              echo "sleeping 1s" && sleep 1
            done
            node ./dist/index.js
        environment:
          # AMQP Bridge
          BRIDGE_CHANNELS: assemble_worker:assemble_worker
          DELIVERY_MODE: NON-PERSISTENT

          # RabbitMQ
          AMQP_URI: amqp://guest:guest@localhost

          # Postgres
          POSTGRESQL_URI: postgres://postgres:postgres@localhost/assemble_worker_test

    working_directory: ~/assemble-worker

    steps:
      - run:
          name: Install dependencies
          command: |
            sudo apt install apt-transport-https
            sudo apt update
            sudo apt install postgresql-client

      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - run:
          name: Wait for Services
          command: >-
            dockerize -wait tcp://localhost:5432 -timeout 1m
            dockerize -wait tcp://localhost:5672 -timeout 1m

            # pg-amqp-bridge has no way to do a readiness check. We assume it becomes ready within a second of RabbitMQ
            sleep 1

      - run:
          name: Create migration test database
          command: psql $TEST_DATABASE_URL -c "create database assemble_worker_migration_test"

      - run: yarn test --detectOpenHandles --forceExit --runInBand

workflows:
  version: 2
  build:
    jobs:
      - lint
      - test:
          requires:
            - lint
